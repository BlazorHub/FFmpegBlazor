@page "/"
@using FFmpegBlazor
@inject IJSRuntime Runtime
@using System.IO
@using Microsoft.AspNetCore.Components.Forms


<InputFile OnChange="fileLoad"/>
<button class="btn btn-primary" @onclick="Load">Load</button>
<video width="300" height="200" autoplay controls src="@url"></video>
<audio controls src="@url2"></audio>

<a class="btn btn-success text-white" href="@url2">Download Mp3</a>

@code
{
    string url; string url2;

    byte[] buffer;
    async void fileLoad(InputFileChangeEventArgs v)
    {
        var file = v.GetMultipleFiles()[0];
        var stream = file.OpenReadStream(100000000);
        buffer = new byte[file.Size];
        Console.WriteLine(file.ContentType);
        await stream.ReadAsync(buffer);

        url = FFmpegFactory.CreateURLFromBuffer(buffer, "myFile.mp4", file.ContentType);
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        if (FFmpegFactory.Runtime == null)
        {
            FFmpegFactory.Logger += (m) => Console.WriteLine(m.Type + " " + m.Message);
            FFmpegFactory.Progress += async (m) =>
            {
                if (m.Ratio == 1)
                {
                    var res = await ff.ReadFile("output.mp3");
                    url2 = FFmpegFactory.CreateURLFromBuffer(res, "output.mp3", "audio/mp3");
                    FFmpegFactory.DownloadBufferAsFile(res, "output.mp3", "audio/mp3");
                    StateHasChanged();
                }
                Console.WriteLine($"Progress {m.Ratio}");
            };
        }
        await FFmpegFactory.Init(Runtime);
    }
    bool done = false;
    FFMPEG ff;
    async void Load()
    {
        ff = FFmpegFactory.CreateFFmpeg(new FFmpegConfig() { Log = false });
        await ff.Load();
        ff.WriteFile("myFile.mp4", buffer);
        await ff.Run("-i", "myFile.mp4", "output.mp3");

        // await ffmpeg.run('-i', 'flame.avi', '-s', '1920x1080', 'output.mp4');

        ///Console.WriteLine(buff == null ? "null" : "not null");
        //Console.WriteLine("buffer");
    }
}